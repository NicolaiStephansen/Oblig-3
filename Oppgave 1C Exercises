Oppgave 9.1.1:
def moon_weight(earth_weight: int) -> int:
    """
    Regn ut hva vekten på jorden vil bli på månen
    """
    return earth_weight // 6
print(moon_weight(300))
print(moon_weight(100))

Oppgave 9.1.6.1
A)
numbers = [10, 3, -2, 0, 1, 0]

# Konverter listen av tall til en liste av string  basert på "sign"
sign_labels =list(map(lambda n: "pos" if n > 0 else "neg" if n < 0 else "zero", numbers))

print(sign_labels)

B)
words = ["eple", "bønner", "taco", "vannmelon" , "Ingen"]

# sjekk om string har lengen av 5
has_length_five = len(list(filter(lambda wd: len(wd) == 5, words))) >0
print(has_length_five)  # Output: hvis en string har lengden av 5 true

C)
numbers = [5, 10, 12, 16, 18, 23, 25]

even_between_10_and_20 = list(filter(lambda n: n % 2 == 0 and 10 <= n <= 20, numbers))
print(even_between_10_and_20)  # Output: [10, 12, 18, 20]

Oppgave 9.1.8.2
A)
def all_z_words(wordlist: list) -> list:
    """Produser liste av ord fra input som inneholder z."""
    zlist = []  # Start med en tom liste
    for wd in wordlist:
        if "z" in wd:
            zlist.append(wd)  # Append word to zlist if it contains "z"
    return zlist
words = ["pizza", "apple", "zebra", "banana", "zoom"]
z_words = all_z_words(words)
print(z_words)  # forventet output: ["pizza", "zebra", "zoom"]

B)
# definer funksjonen med filter
def all_z_words(wordlist: list) -> list:
    """Produser en liste av ord fra input som inneholder z med filter."""
    return list(filter(lambda wd: "z" in wd, wordlist))

# Simplified test function
def test_all_z_words():
    test_cases = [
        # Test med ord som bruker z
        (["pizza", "apple", "zebra", "banana", "zoom"], ["pizza", "zebra", "zoom"], "Test Case 1"),
        
        # Test med ord uten z
        (["apple", "banana", "orange"], [], "Test Case 2"),
        
        # en tom liste
        ([], [], "Test Case 3"),
    ]
    
    all_passed = True
    for input_data, expected_output, description in test_cases:
        result = all_z_words(input_data)
        if result == expected_output:
            print(f"{description}: Passed")
        else:
            print(f"{description}: Failed")
            print(f"  Input: {input_data}")
            print(f"  Expected Output: {expected_output}")
            print(f"  Actual Output: {result}")
            all_passed = False

    if all_passed:
        print("All tests passed!")
    else:
        print("Some tests failed.")

# test
test_all_z_words()

Oppgave 9.2.2

# Step 1: De forskjellige rommene
room_dict = {
    "Room A": 40,
    "Room B": 120,
    "Room C": 49,
    "Room D": 80,
    "Room E": 50
}

# Step 2: Sjekke seter i spesefikke rom
room_name = "Room B"
seats_in_room = room_dict.get(room_name, "Room not found")
print(f"Seats in {room_name}: {seats_in_room}")

# Step 3: øke kapasiten av et spesifikt rom med 10 plasser
room_name = "Room A"
if room_name in room_dict:
    room_dict[room_name] += 10
print(f"Updated seats in {room_name}: {room_dict[room_name]}")

# Step 4: Finne alle rom som har plass til 50 personer
rooms_with_50_plus = [room for room, seats in room_dict.items() if seats >= 50]
print("Rooms that can seat at least 50 students:", rooms_with_50_plus)

